dilapitated Scripts

// if (window.innerWidth >= 1024) {

//     //For Landing Section, Hovering over Landing Links to display span text
//     landingLinks.forEach((current, index) => {
//         current.addEventListener('mouseover', _ => {
//             opaOne(landingLinks_info[index]);
//         })
//         current.addEventListener('mouseout', _ => {
//             opaNone(landingLinks_info[index]);
//         })
//     })

//     // Keeps Navigation Links side of the landing section adequately sized in 
//     // consideration of the width of the Logo Side
//     var logoSideWidth = 332,
//         navSide = document.querySelector('#landing .navSide'),
//         setWidth_navSide = function() {
//             var width = 'calc(100% - ' + logoSideWidth + 'px)';
//             navSide.style.width = width;
//             console.log(navSide.offsetWidth);
//         };
//     setWidth_navSide()

//     //is this necessary?
//     window.addEventListener('resize', _ => {
//         var logoSideWidth = document.querySelector('#landing .logoSide').offsetWidth;
//         setWidth_navSide();
//         // console.log(navSide.offsetWidth);
//     })
// } //end of if Statement



/*______________________________________________________________________

	Proprietary Code for
	N A V I G A T I O N 	O V E R L A Y
________________________________________________________________________
*/

// Allows for on hover animation for links in the Navigation Menu
// moveLeft.forEach((el) => {
//             el.addEventListener('mouseover', function() {
//                 (this.classList.contains('active') === true) ? this.classList.remove('active') & this.classList.add('active'): this.classList.add('active');
//                 el.addEventListener('mouseout', function() {
//                     this.classList.remove('active');
//                 })
//             });

//             // Allows for on click animation for links in the Navigation Menu
//             scmLinks.forEach((el) => {
//                 el.addEventListener('click', _ => {
//                     el.style.backgroundColor = 'var(--main-blue)';
//                     el.style.color = '#ffffff';
//                     setTimeout(_ => {
//                         el.style.backgroundColor = 'transparent';
//                         el.style.color = 'var(--secondary-gray)';
//                     }, 510);
//                 })
//             });
//         });

//functionality for Navigation links to peruse sections, make them the active
//currently viewed one
navlinks.forEach((el, index) => {
    el.addEventListener('click', function(e) {
        e.preventDefault(); //Gotta add it

        hide(sections[current]);
        display(sections[index]);
        var siblings = getSiblings(sections[index]);
        siblings.forEach((element) => {
            element.classList.remove('active');
        });
        changeHeaderInfo(index);
        current = index;
        sessionStorage.setItem('currentSlide', current);
        // overlay.classList.add('nonActive');
        // overlay.classList.remove('active');
        setTimeout(_ => {
            opaNone(overlay);
        }, 550);
        setTimeout(_ => {
            hide(overlay);
        }, 1000);
        setTimeout(_ => {
            display(sectionsMainWrapper);
        }, 1100);
        setTimeout(_ => {
            opaOne(sectionsMainWrapper);
            opaOne(sections[current]);
        }, 1150);


        // display(sectionsMainWrapper);
        // opaOne(sectionsMainWrapper);
        // hide(sections[current]);
        // display(sections[index]);
        // opaOne(sections[index]);

        // var siblings = getSiblings(sections[index]);
        // siblings.forEach((element) => {
        //     element.classList.remove('active');
        // });
        // changeHeaderInfo(index);
        // current = index;
        // sessionStorage.setItem('currentSlide', current);
        // overlay.classList.add('nonActive');
        // overlay.classList.remove('active');
        // setTimeout(_ => {
        //     overlay.style.display = 'none';
        // }, 500);
    });
});


//	Functionality for button that opens Navigation menu
openNav.addEventListener('click', () => {
    opaNone(sectionsMainWrapper);
    setTimeout(_=> {
        hide(sectionsMainWrapper);
    }, 610)
    setTimeout(_=> {
        display(overlay);
    }, 650)
    setTimeout(_ => {
        opaOne(overlay);
        // (overlay.classList.contains('notActive') === true) ? overlay.classList.remove('Notactive') & overlay.classList.add('active'): overlay.classList.add('active');
    }, 800);
});

//	Functionality for button that closes Navigation menu
closeNav.addEventListener('click', () => {
    opaNone(overlay);
    setTimeout(_ => {
        hide(overlay);
    }, 610);
    setTimeout(_ => {
        display(sectionsMainWrapper);
    }, 650);
    setTimeout(_ => {
        opaOne(sectionsMainWrapper);
    }, 750);
});

// toggleAbout.addEventListener('click', _=> {
//     opaNone(overlay);
//     setTimeout(_=> {
//         display(footer);
//     }, 510);
//     setTimeout(_=> {
//         opaOne(footer);
//     }, 550);
// })

btm.addEventListener('click', _=> {
    opaNone(footer);
    setTimeout(_=> {
        hide(footer);
    }, 510);
    setTimeout(_=> {
        opaOne(overlay);
    }, 550);

})



/*______________________________________________________________________

	Proprietary Code for
	A S P I R A T I O N S 	S E C T I O N
________________________________________________________________________
*/

// Function to load data for the first slide + setting the first slide
// var loadInitial_slides = (num) => {
//     slides.style.backgroundImage = aspirations[num].bgImage;
//     slideHeader.innerText = aspirations[num].title;
//     slideDescription.innerText = aspirations[num].description;
//     trueNumber = num + 1,
//         place = '0' + trueNumber.toString();
//     currentSlide.innerText = place;
// }
// loadInitial_slides(0);

/*
	Functionality to advance and reversion through slides
	+
	linking functionalities to their respective buttons
*/
// var load_nextSlide = () => {
//     fade.style.backgroundColor = 'rgb(247, 247, 247)';
//     slideHeader.style.opacity = 0;
//     opaNone(slideDescription);
//     opaNone(tellerWrapper);
//     _current++;
//     trueNumber = _current + 1;
//     place = '0' + trueNumber.toString();
//     setTimeout(_ => {
//         slides.style.backgroundImage = aspirations[_current].bgImage;
//         slideHeader.innerText = aspirations[_current].title;
//         slideDescription.innerText = aspirations[_current].description;
//         currentSlide.innerText = place;
//     }, 420);
//     setTimeout(_ => {
//         fade.style.backgroundColor = 'rgba(255, 255, 255, 0.4)';
//         opaOne(slideHeader);
//         opaOne(slideDescription);
//         opaOne(tellerWrapper);
//     }, 500);
// }
// nextSlide.addEventListener('click', function() {
//     var el = this;
//     if (_current == 3) {
//         load_nextSlide();
//         setTimeout(function() {
//             console.log(el);
//             el.disabled = true;
//             el.classList.add("disabled");
//             el.children[0].classList.add("disabled");
//         }, 500)
//     }
//     if (_current == 4) { this.disabled = true; }
//     else {
//         this.disabled = false;
//         this.classList.remove("disabled");
//         this.children[0].classList.remove("disabled");
//         load_nextSlide();
//         prevSlide.classList.remove('disabled');
//         prevSlide.children[0].classList.remove('disabled');
//     }
// });

// var load_prevSlide = () => {
//     fade.style.backgroundColor = 'rgb(247, 247, 247)';
//     opaNone(slideHeader);
//     opaNone(slideDescription);
//     opaNone(tellerWrapper);
//     _current--;
//     trueNumber = _current + 1;
//     place = '0' + trueNumber.toString();
//     setTimeout(_ => {
//         slides.style.backgroundImage = aspirations[_current].bgImage;
//         slideHeader.innerText = aspirations[_current].title;
//         slideDescription.innerText = aspirations[_current].description;
//         currentSlide.innerText = place;
//     }, 420);
//     setTimeout(_ => {
//         fade.style.backgroundColor = 'rgba(255, 255, 255, 0.4)';
//         opaOne(slideHeader);
//         opaOne(slideDescription);
//         opaOne(tellerWrapper);
//     }, 500);
// }
// prevSlide.addEventListener('click', function() {
//     var el = this;
//     if (_current == 1) {
//         load_prevSlide();
//         setTimeout(function() {
//             console.log(el);
//             el.disabled = true;
//             el.classList.add("disabled");
//             el.children[0].classList.add("disabled");
//         }, 500)
//     }
//     if (_current == 0) { this.disabled = true; }
//     else {
//         this.disabled = false;
//         this.classList.remove("disabled");
//         this.children[0].classList.remove("disabled");
//         load_prevSlide();
//         prevSlide.classList.remove('disabled');
//         prevSlide.children[0].classList.remove('disabled');
//     }
// });


// var setSlidesHeight_mobile = () => {
//     var const1 = controls.offsetHeight,
//         const2 = header.offsetHeight,
//         difference = const1 + const2,
//         height = 'calc(100vh - ' +difference+ 'px)';

//     slides.style.height = height;
//     slides.style.marginBottom = const1;
// } 

// if (window.innerWidth <= 440) {
//     setSlidesHeight_mobile();
// }









section#aspirations {}

section#aspirations article {
	width: 100%;
	margin-left: -20px;
	margin-bottom: 60px;
	font-family: 'Open Sans', sans-serif;
	text-align: right;
	font-weight: 300 !important;
	line-height: 24px;  
	color: var(--primary-gray);
	padding-top: 110px;
}

section#aspirations article h1 {
	margin: 20px 0;
	font-family: 'Montserrat', sans-serif;
	font-weight: 300;
	font-size: 1.9em;
	font-weight: 300;
}
section#aspirations article p {
	margin-left: auto;
	width: 80%;
	font-size: 0.95em;
}




section#aspirations div#slides {
	width: 100%;
	height: 50vh;
	margin-bottom: 90px;
	position: relative;

	background-image: url('images/tommyTaipeiTaiwan.jpg');
	background-size: cover;
	background-position: center center;
	background-repeat: no-repeat;
}

section#aspirations div#slides * { transition: all ease-out 0.4s; }

div#slides div#fade {
	width: 100%;
	height: 100%;
	background-color: rgba(255, 255, 255, 0.4);
}

div#slides div.infoWrapper {
	position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(255, 255, 255, 0.8);

    text-align: center;
    font-weight: 300;
    color: var(--primary-gray);
}


div#slides div.infoWrapper h1 {
	width: 95%;
	margin: 20px auto 10px;
	font-family: 'Montserrat';
	font-weight: 300;
	font-size: 1.9em;
}
div#slides div.infoWrapper p {
	width: 98%;
	margin: 10px auto 30px;
	font-family: 'Open Sans';
	font-size: 0.9em;
}

div#slides div.infoWrapper div.tellerWrapper {
	margin-bottom: 10px
}
div#slides div.infoWrapper div.tellerWrapper p {
	margin: 0;
}
div#slides div.infoWrapper div.tellerWrapper p#current{
	margin-left: -15px;
}
div#slides div.infoWrapper div.tellerWrapper p#total{
	margin-left: 15px;
}
div#slides div.infoWrapper div.tellerWrapper div.divider{
	width: 40px;
    border: 0.5px solid var(--primary-gray);
    position: relative;
    top: -20px;
    left: 50%;
    transform: translateX(-60%) rotate(-45deg);
}

div#slides div.infoWrapper svg {
	width: 40px;
    height: 40px;
	margin-bottom: 10px;
	position: absolute;
	bottom: 0;
}

div#slides div.infoWrapper svg.disabled {
	border-color: rgba(149, 152, 154, 0.25) !important;
}

div#slides div.infoWrapper svg:hover {
	background-color: var(--primary-gray);
	border-color: #ffffff;
}

div#slides div.infoWrapper svg:hover * {
	stroke: #ffffff !important;
}

div#slides div.infoWrapper svg#left {
	left: 0;
	margin-left: 10px;
	border-left: 1px solid var(--primary-gray);
}
div#slides div.infoWrapper svg#right {
	right: 0;
	margin-right: 10px;
	border-right: 1px solid var(--primary-gray);
}


div#slides div.infoWrapper svg * {
	transition: stroke ease-out 0.45s;
	stroke: var(--primary-gray);
}

div#slides div.infoWrapper svg path.disabled {
	stroke: rgba(149, 152, 154, 0.25) !important;
}


@media screen and (max-width: 440px) {
	section#aspirations article h1 {
		font-size: 1.5em;
	}

	section#aspirations article p {
		font-size: 0.85em;
    	line-height: 22px;
	}

	/*section#aspirations div#slides {}*/

	div#slides div.infoWrapper {
		width: 90%;
	}
}

/*______________________________________________________________________

	Proprietary Code for
	E X P E R I E N C E S   	S E C T I O N
________________________________________________________________________
*/

var setStoriesHeight_mobile = () => {
    var const1 = controls.offsetHeight,
        const2 = header.offsetHeight,
        difference = const1 + const2,
        height = 'calc(100vh - ' +difference+ 'px)';

    mainWrapper.style.height = height;
} 

//Setting hover function for use
hover(exploreStory_buttons, function() {
    this.classList.add('active');
}, function() {
    this.classList.remove('active');
});

//Shows / Hides Story Launching button upon hovering on said section
anExp.forEach((current, index) => {
    current.addEventListener('mouseover', _ => {
        opaOne(exploreStory_buttons[index]);
    })
    current.addEventListener('mouseout', _ => {
        opaNone(exploreStory_buttons[index]);
    })
});

// Functionality for buttons to launch their respective story
exploreStory_buttons.forEach((el, index) => {
    el.addEventListener('click', _ => {
        anExp.forEach((el) => { el.style.opacity = 0; });
        setTimeout(_ => {
            anExp.forEach((el) => { el.style.display = 'none'; });
        }, 1020);
        setTimeout(_ => {
            if (window.innerWidth < 768) {
                setStoriesHeight_mobile();
                mainWrapper.classList.add('storyActive');
            };
            if (window.innerWidth >= 768) {
                mainWrapper.classList.add('storyActive_desktop');
            }
            story.style.backgroundImage = 'url(' + stories[index].bgImage + ')';
            storyNumber.innerText = stories[index].number;
            storyHeader.innerText = stories[index].title;
            storyAbout.innerText = stories[index].about;
        }, 1050);
        setTimeout(_ => {
            display(story);
        }, 1100);
        setTimeout(_ => {
            opaOne(story);
        }, 1120);
    })
});

// Functionality for button to exit / close currently open story
exitStory.addEventListener('click', _ => {
    story.style.opacity = 0;
    setTimeout(_ => {
        hide(story);
        if (window.innerWidth < 768) {
            mainWrapper.classList.remove('storyActive');
            mainWrapper.style.height = "auto";
        };
        if (window.innerWidth >= 768) {
            mainWrapper.classList.remove('storyActive_desktop');
        }
        story.style.backgroundImage = '';
        storyNumber.innerText = '';
        storyHeader.innerText = '';
        storyAbout.innerText = '';
    }, 1020);
    setTimeout(_ => {
        anExp.forEach((el) => {
            display(el);
        })
    }, 1050);
    setTimeout(_ => {
        anExp.forEach((el) => {
            opaOne(el);
        })
    }, 1100);
});






/*______________________________________________________________________

	Proprietary Code for
	R E C O L L E C T I O N S   	S E C T I O N
________________________________________________________________________
*/


/* 
	Tracks user's scrolling of element
	shows / hides arrows based on scroll scroll
	relative to / from top and bottom 
*/
entries.addEventListener('scroll', function() {
    var scrollAmount = this.scrollTop,
        max = (this.scrollHeight - this.clientHeight) - 150;

    // console.log(this.scrollHeight);
    // console.log(scrollAmount);
    if (scrollAmount <= 150) {
        arrowUp.style.stroke = 'rgba(255, 255, 255, 1)';
    }
    if (scrollAmount > 100) {
        arrowUp.style.stroke = '#ADD9F4';
    }
    if (scrollAmount >= max) {
        arrowDown.style.stroke = 'rgba(255, 255, 255, 1)';
    }
    if (scrollAmount > 0 && scrollAmount < max) {
        arrowUp.style.stroke = '#ADD9F4';
        arrowDown.style.stroke = '#ADD9F4';
    }
});

/* 
	Takes entry title and date from list items, entries,
	injects them into main article's h1 and h3 
	and opens main article body
*/
launchEntry.forEach((current, index) => {
    current.addEventListener('click', _ => {
        articleTitle.innerText = entryHeader[index].innerText;
        articleDate.innerText = entryDate[index].innerText;
        setTimeout(_ => {
            opaNone(upNdown);
            opaNone(entryWrapper);
        }, 400)
        setTimeout(_ => {
            hide(upNdown);
            hide(entryWrapper);
        }, 950)
        setTimeout(_ => {
            display(articleBody);
            //articleWrapper.style.paddingRight = articleWrapper.offsetWidth - articleWrapper.clientWidth + "px";
        }, 1050)
        setTimeout(_ => {
            opaOne(articleBody);
        }, 1150)
    });
});


// Closes article body, redisplays entries
closeArticle.addEventListener('click', _ => {
    articleBody.style.opacity = 0;
    setTimeout(_ => {
        opaNone(articleBody);
    }, 550)
    setTimeout(_ => {
        display(upNdown);
        display(entryWrapper);
    }, 600)
    setTimeout(_ => {
        opaOne(upNdown);
        opaOne(entryWrapper);
    }, 650)
});


// Button to toggle menu open + Button to close menu
toggleMenu.addEventListener('click', _ => {
    articleMenu.classList.add('active');
});

closeMenu.addEventListener('click', _ => {
    articleMenu.classList.remove('active');
});



















/*______________________________________________________________________

    Connections Area 
________________________________________________________________________
*/

section#connections {}

section#connections h1 {
    margin: 0 0 30px 20px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 300;
    font-size: 1.25em;
    color: var(--primary-gray);

    padding-top: 100px;
}

section#connections div#formWrapper {
    width: 60%;
    /*height: ;*/
    margin: 30px 0 60px 17px;
    overflow-x: hidden;
}

section#connections form {
    width: 100%;
    margin: 0;
    position: relative;
    padding: 2px 0;
    list-style-type: none;
}


section#connections form input {
    display: inline-block;
    width: 98%;
    height: 50px;
    margin: 5px auto;
    text-align: center;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 1em;
    color: var(--main-blue);
    background-color: var(--tertiary-gray);
    border-radius: 2px;
    border: 2px solid transparent;
    transition: all ease-out 0.5s;
}

section#connections form .input {
    display: none;
    opacity: 0;
    transition: all ease-out 0.5s;
}

section#connections form input:focus {
    outline: none;
    border-color: var(--main-blue)
}

section#connections form input::placeholder {
    text-align: center;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 1em;
    color: #B8B8B8
}

section#connections form textarea {
    display: inline-block;
    width: 98%;
    margin: 5px auto;
    text-align: left;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 0.9em;
    color: #B8B8B8;
    background-color: var(--tertiary-gray);
    border: 1px solid transparent;
    box-sizing: border-box;
    padding: 7px;
    transition: all ease-out 0.5s;
}

section#connections form textarea::placeholder {
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 1em;
    color: #B8B8B8
}

section#connections form textarea:focus {
    outline: none;
    border-color: var(--main-blue)
}

section#connections form p.message {
    display: none;
    width: 100%;
    margin: 0 auto;
    text-align: center;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 1.25em;
    color: var(--main-blue);
    transition: all ease-out 0.5s;
    opacity: 0;
}

section#connections div#socialMedia {
    display: table;
    position: relative;
    margin-left: 20px;
}

section#connections div#socialMedia ul {
    display: table;
    /*width: 100%;*/
    margin: 0;
    padding: 0;
    border-bottom: 1px solid var(--secondary-gray);
}

section#connections div#socialMedia ul li {
    display: inline-block;
    margin: 0 10px;
    padding: 10px 0px;
}

section#connections div#socialMedia ul li a {
    text-decoration: none;
    font-family: 'Proxima Nova';
    font-size: 1.25em;
    color: var(--secondary-gray);
    border-bottom: 4px solid;
    border-bottom-color: rgba(0, 0, 0, 0);
    padding: 10px 10px 8px;
    transition: all ease-out 0.5s;
}

section#connections div#socialMedia ul li a:hover {
    /*color: var(--main-blue) !important;*/
    border-bottom-color: var(--main-blue) !important;
}

section#connections div#socialMedia ul li a.active {
    color: var(--main-blue);
    border-bottom-color: var(--main-blue);
}

section#connections div#socialMedia ul li a:focus {

}

section#connections div#socialMedia p#whatIdoThere {
    margin: 10px auto;
    text-align: center;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-size: 1em;
    color: var(--main-blue);
    transition: opacity ease-out 0.5s;
    opacity: 0;
}




@media screen and (max-width: 440px) {
    section#connections h1 {
        width: 90%;
        margin: 0 auto 30px;
        text-align: center;
        padding-top: 140px;
    }

    section#connections div#formWrapper {
        width: 90%;
        margin: 40px auto 60px;
    }

    section#connections div#socialMedia {
        margin: 0 auto;
    }

    section#connections div#socialMedia ul {
        margin: 0 auto;
    }

    section#connections div#socialMedia ul li {
        margin: 0 7px;
    }
}



















/*______________________________________________________________________

    Proprietary Code for
    C O N N E C T I O N S       S E C T I O N
________________________________________________________________________
*/

//Setting the first input to display + be visible
display(inputs[0]);
opaOne(inputs[0]);


// Displays next input area after user has pressed 'enter' on keyboard
inputs.forEach((current, index) => {

    current.addEventListener('keydown', function(event) {
        if (event.which === 13) {
            console.log(index === 3);
            // After last input, displays the 'Message Delievered' .... message
            if (index == 3) {
                inputs[3].addEventListener('keydown', function(event) {
                    if (event.which === 13) {
                        opaNone(inputs[3]);
                        setTimeout(_ => {
                            hide(inputs[3]);
                        }, 520)
                        setTimeout(_ => {
                            display(message);
                        }, 530)
                        setTimeout(_ => {
                            opaOne(message);
                        }, 550)
                    }
                })
            } else {
                opaNone(current);
                setTimeout(_ => {
                    hide(current);
                }, 520);
                setTimeout(_ => {
                    display(inputs[index + 1]);
                    //inputs[index + 1].style.display = 'block';
                }, 530);
                setTimeout(_ => {
                    opaOne(inputs[index + 1]);
                    //inputs[index + 1].style.opacity = '1';
                }, 550);
            }
        }
    })
});

// For social media links onHover and onClick animations and functionality
socialLinks.forEach((current, index, array) => {

    current.addEventListener('mouseover', _ => {
        current.classList.add('active');

        //gets siblings of current, all other elements in array other than current
        var siblings = [];
        for (let i = 0; i < array.length; i++) {
            siblings.push(socialLinks[i]);
            if (i == index) {
                var thePos = i;
                siblings.splice(thePos, 1);
            }
        }

        siblings.forEach((el) => { el.classList.remove('active'); })

        whatIdoThere.innerText = captions[index];
        setTimeout(_ => {
            opaOne(whatIdoThere);
        }, 50)
    })
    current.addEventListener('click', _ => {
        current.style.backgroundColor = 'var(--main-blue)';
        current.style.color = '#ffffff';
        setTimeout(_ => {
            current.style.backgroundColor = 'transparent';
            current.style.color = 'var(--secondary-gray)';
            current.style.borderBottomColor = "rgba(0, 0, 0, 0)";
        }, 550)
    });
});